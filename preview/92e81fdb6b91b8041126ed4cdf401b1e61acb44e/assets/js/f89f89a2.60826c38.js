"use strict";(self.webpackChunkmm_docs_v_2=self.webpackChunkmm_docs_v_2||[]).push([[5275],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),l=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},i=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,u=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(u,".").concat(m)]||d[m]||p[m]||c;return n?a.createElement(h,o(o({ref:t},i),{},{components:n})):a.createElement(h,o({ref:t},i))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<c;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const c="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(c,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),c=n(6010),o=n(2389),s=n(7392),u=n(7094),l=n(2466);const i="tabList__CuJ",d="tabItem_LNqP";function p(e){const{lazy:t,block:n,defaultValue:o,values:p,groupId:m,className:h}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=p??b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,s.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===o?o:o??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:k}=(0,u.U)(),[w,N]=(0,r.useState)(y),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,l.o5)();if(null!=m){const e=g[m];null!=e&&e!==w&&f.some((t=>t.value===e))&&N(e)}const E=e=>{const t=e.currentTarget,n=T.indexOf(t),a=f[n].value;a!==w&&(x(t),N(a),null!=m&&k(m,String(a)))},O=e=>{let t=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;t=T[n]??T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;t=T[n]??T[T.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,c.Z)("tabs-container",i)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":n},h)},f.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>T.push(e),onKeyDown:O,onClick:E},o,{className:(0,c.Z)("tabs__item",d,o?.className,{"tabs__item--active":w===t})}),n??t)}))),t?(0,r.cloneElement)(b.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,o.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},2724:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),c=n(5488),o=n(5162);const s={description:"Access a user's accounts and handle changed accounts."},u="Access a user's accounts",l={unversionedId:"get-started/access-accounts",id:"get-started/access-accounts",title:"Access a user's accounts",description:"Access a user's accounts and handle changed accounts.",source:"@site/wallet/get-started/access-accounts.md",sourceDirName:"get-started",slug:"/get-started/access-accounts",permalink:"/mm-docs-v2/preview/92e81fdb6b91b8041126ed4cdf401b1e61acb44e/wallet/get-started/access-accounts",draft:!1,tags:[],version:"current",frontMatter:{description:"Access a user's accounts and handle changed accounts."},sidebar:"walletSidebar",previous:{title:"Detect a user's network",permalink:"/mm-docs-v2/preview/92e81fdb6b91b8041126ed4cdf401b1e61acb44e/wallet/get-started/detect-network"},next:{title:"How to",permalink:"/mm-docs-v2/preview/92e81fdb6b91b8041126ed4cdf401b1e61acb44e/wallet/category/how-to"}},i={},d=[{value:"Create a connect button",id:"create-a-connect-button",level:2},{value:"Handle accounts",id:"handle-accounts",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"access-a-users-accounts"},"Access a user's accounts"),(0,r.kt)("p",null,"User accounts are used in a variety of contexts in Ethereum, including as identifiers and for\n",(0,r.kt)("a",{parentName:"p",href:"/mm-docs-v2/preview/92e81fdb6b91b8041126ed4cdf401b1e61acb44e/wallet/how-to/sign-data"},"signing transactions"),".\nTo request a signature from a user or have a user approve a transaction, your dapp must\naccess the user's accounts using the\n",(0,r.kt)("a",{parentName:"p",href:"/mm-docs-v2/preview/92e81fdb6b91b8041126ed4cdf401b1e61acb44e/wallet/reference/rpc-api#ethrequestaccounts"},(0,r.kt)("inlineCode",{parentName:"a"},"eth_requestAccounts"))," RPC method."),(0,r.kt)("p",null,"When accessing a user's accounts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Only")," initiate a connection request in response to direct user action, such as\nselecting a ",(0,r.kt)("a",{parentName:"li",href:"#create-a-connect-button"},"connect button"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Always")," disable the connect button while the connection request is pending."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Never")," initiate a connection request on page load.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can also ",(0,r.kt)("a",{parentName:"p",href:"/mm-docs-v2/preview/92e81fdb6b91b8041126ed4cdf401b1e61acb44e/wallet/how-to/use-sdk/"},"use MetaMask SDK")," to enable a reliable, secure, and\nseamless connection from your dapp to a MetaMask wallet client.")),(0,r.kt)("h2",{id:"create-a-connect-button"},"Create a connect button"),(0,r.kt)("p",null,"We recommend providing a button to allow users to connect MetaMask to your dapp.\nSelecting this button should call ",(0,r.kt)("inlineCode",{parentName:"p"},"eth_requestAccounts")," to access the user's account."),(0,r.kt)("p",null,"In the ",(0,r.kt)("a",{parentName:"p",href:"/mm-docs-v2/preview/92e81fdb6b91b8041126ed4cdf401b1e61acb44e/wallet/get-started/set-up-dev-environment#example"},"example project code"),", the following JavaScript code\naccesses the user's accounts when they select a connect button, and the following HTML code\ndisplays the button and the current account:"),(0,r.kt)(c.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="index.js"',title:'"index.js"'},"// You should only attempt to request the user's account in response to user\n// interaction, such as selecting a button.\n// Otherwise, you popup-spam the user like it's 1999.\n// If you fail to retrieve the user's account, you should encourage the user\n// to initiate the attempt.\nconst ethereumButton = document.querySelector('.enableEthereumButton');\nconst showAccount = document.querySelector('.showAccount');\n\nethereumButton.addEventListener('click', () => {\n  getAccount();\n});\n\n// While awaiting the call to eth_requestAccounts, you should disable\n// any buttons the user can select to initiate the request.\n// MetaMask rejects any additional requests while the first is still\n// pending.\nasync function getAccount() {\n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\n    .catch((err) => {\n      if (err.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        // If this happens, the user rejected the connection request.\n        console.log('Please connect to MetaMask.');\n      } else {\n        console.error(err);\n      }\n    });\n  const account = accounts[0];\n  showAccount.innerHTML = account;\n}\n"))),(0,r.kt)(o.Z,{value:"html",label:"HTML",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'\x3c!-- Display a connect button and the current account --\x3e\n<button class="enableEthereumButton">Enable Ethereum</button>\n<h2>Account: <span class="showAccount"></span></h2>\n')))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"MetaMask currently returns at most one account in the ",(0,r.kt)("inlineCode",{parentName:"p"},"accounts")," array.\nThe array may contain more than one account in the future."),(0,r.kt)("p",{parentName:"admonition"},"To retrieve the full list of accounts for which the user has permitted access, use the\n",(0,r.kt)("a",{parentName:"p",href:"../reference/rpc-api#wallet_getpermissions"},(0,r.kt)("inlineCode",{parentName:"a"},"wallet_getPermissions"))," RPC method.")),(0,r.kt)("h2",{id:"handle-accounts"},"Handle accounts"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("a",{parentName:"p",href:"https://metamask.github.io/api-playground/api-documentation/#eth_accounts"},(0,r.kt)("inlineCode",{parentName:"a"},"eth_accounts")),"\nRPC method to handle user accounts.\nListen to the ",(0,r.kt)("a",{parentName:"p",href:"/mm-docs-v2/preview/92e81fdb6b91b8041126ed4cdf401b1e61acb44e/wallet/reference/provider-api#accountschanged"},(0,r.kt)("inlineCode",{parentName:"a"},"accountsChanged"))," provider event to\nbe notified when the user changes accounts."),(0,r.kt)("p",null,"In the ",(0,r.kt)("a",{parentName:"p",href:"/mm-docs-v2/preview/92e81fdb6b91b8041126ed4cdf401b1e61acb44e/wallet/get-started/set-up-dev-environment#example"},"example project script"),", the following code handles user\naccounts and detects when the user changes accounts:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="index.js"',title:'"index.js"'},"let currentAccount = null;\nwindow.ethereum.request({ method: 'eth_accounts' })\n  .then(handleAccountsChanged)\n  .catch((err) => {\n    // Some unexpected error.\n    // For backwards compatibility reasons, if no accounts are available,\n    // eth_accounts returns an empty array.\n    console.error(err);\n  });\n\n// Note that this event is emitted on page load.\n// If the array of accounts is non-empty, you're already\n// connected.\nwindow.ethereum.on('accountsChanged', handleAccountsChanged);\n\n// eth_accounts always returns an array.\nfunction handleAccountsChanged(accounts) {\n  if (accounts.length === 0) {\n    // MetaMask is locked or the user has not connected any accounts.\n    console.log('Please connect to MetaMask.');\n  } else if (accounts[0] !== currentAccount) {\n    // Reload your interface with accounts[0].\n    currentAccount = accounts[0];\n    // Update the account displayed (see the HTML for the connect button)\n    showAccount.innerHTML = currentAccount;\n  }\n}\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"MetaMask currently returns at most one account in the ",(0,r.kt)("inlineCode",{parentName:"p"},"accounts"),' array.\nThe array may contain more than one account in the future.\nThe first account in the array will always be considered the user\'s "selected" account.')))}m.isMDXComponent=!0}}]);